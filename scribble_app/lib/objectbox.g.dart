// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/audio_recording.dart';
import 'models/context_item.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 5663275069712737874),
      name: 'AudioContextItem',
      lastPropertyId: const obx_int.IdUid(4, 1878078308348321827),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2598328190654821553),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5312034367181756970),
            name: 'filename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 668547182320495381),
            name: 'filePath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1878078308348321827),
            name: 'createdAt',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 2272467020430899855),
      name: 'ContextItem',
      lastPropertyId: const obx_int.IdUid(5, 1183687175964651143),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 998551582602447541),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2732291289838330518),
            name: 'filename',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6808490592231889815),
            name: 'content',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7810266948242189817),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1183687175964651143),
            name: 'audioContextItemId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(2, 6286035844982742130),
            relationTarget: 'AudioContextItem')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 4067806130680950412),
      name: 'AudioRecording',
      lastPropertyId: const obx_int.IdUid(4, 3282377542032703978),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2364936867840592968),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7501538362287621858),
            name: 'timestamp',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2069735353287538095),
            name: 'filePath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3282377542032703978),
            name: 'duration',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(6, 4067806130680950412),
      lastIndexId: const obx_int.IdUid(2, 6286035844982742130),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [
        1227704315193853570,
        2508510815065060011,
        1564031132270936546
      ],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        5452040319708542009,
        5057609684850204464,
        4799952240466897185,
        4060389133168270413,
        6281754370306440688,
        2618022208323064739,
        624923504248606464,
        7176146195943018626,
        2795124721063737989,
        8409498573812053644,
        5921019117155357297,
        2838383385783961265
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    AudioContextItem: obx_int.EntityDefinition<AudioContextItem>(
        model: _entities[0],
        toOneRelations: (AudioContextItem object) => [],
        toManyRelations: (AudioContextItem object) => {},
        getId: (AudioContextItem object) => object.id,
        setId: (AudioContextItem object, int id) {
          object.id = id;
        },
        objectToFB: (AudioContextItem object, fb.Builder fbb) {
          final filenameOffset = fbb.writeString(object.filename);
          final filePathOffset = fbb.writeString(object.filePath);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, filenameOffset);
          fbb.addOffset(2, filePathOffset);
          fbb.addInt64(3, object.createdAt.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final filenameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final filePathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0));
          final object = AudioContextItem(
              id: idParam,
              filename: filenameParam,
              filePath: filePathParam,
              createdAt: createdAtParam);

          return object;
        }),
    ContextItem: obx_int.EntityDefinition<ContextItem>(
        model: _entities[1],
        toOneRelations: (ContextItem object) => [object.audioContextItem],
        toManyRelations: (ContextItem object) => {},
        getId: (ContextItem object) => object.id,
        setId: (ContextItem object, int id) {
          object.id = id;
        },
        objectToFB: (ContextItem object, fb.Builder fbb) {
          final filenameOffset = fbb.writeString(object.filename);
          final contentOffset = fbb.writeString(object.content);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, filenameOffset);
          fbb.addOffset(2, contentOffset);
          fbb.addInt64(3, object.createdAt.millisecondsSinceEpoch);
          fbb.addInt64(4, object.audioContextItem.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final filenameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final contentParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0));
          final object = ContextItem(
              id: idParam,
              filename: filenameParam,
              content: contentParam,
              createdAt: createdAtParam);
          object.audioContextItem.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          object.audioContextItem.attach(store);
          return object;
        }),
    AudioRecording: obx_int.EntityDefinition<AudioRecording>(
        model: _entities[2],
        toOneRelations: (AudioRecording object) => [],
        toManyRelations: (AudioRecording object) => {},
        getId: (AudioRecording object) => object.id,
        setId: (AudioRecording object, int id) {
          object.id = id;
        },
        objectToFB: (AudioRecording object, fb.Builder fbb) {
          final filePathOffset = fbb.writeString(object.filePath);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.timestamp.millisecondsSinceEpoch);
          fbb.addOffset(2, filePathOffset);
          fbb.addInt64(3, object.duration);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final timestampParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0));
          final filePathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final durationParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final object = AudioRecording(
              timestamp: timestampParam,
              filePath: filePathParam,
              duration: durationParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [AudioContextItem] entity fields to define ObjectBox queries.
class AudioContextItem_ {
  /// see [AudioContextItem.id]
  static final id =
      obx.QueryIntegerProperty<AudioContextItem>(_entities[0].properties[0]);

  /// see [AudioContextItem.filename]
  static final filename =
      obx.QueryStringProperty<AudioContextItem>(_entities[0].properties[1]);

  /// see [AudioContextItem.filePath]
  static final filePath =
      obx.QueryStringProperty<AudioContextItem>(_entities[0].properties[2]);

  /// see [AudioContextItem.createdAt]
  static final createdAt =
      obx.QueryDateProperty<AudioContextItem>(_entities[0].properties[3]);
}

/// [ContextItem] entity fields to define ObjectBox queries.
class ContextItem_ {
  /// see [ContextItem.id]
  static final id =
      obx.QueryIntegerProperty<ContextItem>(_entities[1].properties[0]);

  /// see [ContextItem.filename]
  static final filename =
      obx.QueryStringProperty<ContextItem>(_entities[1].properties[1]);

  /// see [ContextItem.content]
  static final content =
      obx.QueryStringProperty<ContextItem>(_entities[1].properties[2]);

  /// see [ContextItem.createdAt]
  static final createdAt =
      obx.QueryDateProperty<ContextItem>(_entities[1].properties[3]);

  /// see [ContextItem.audioContextItem]
  static final audioContextItem =
      obx.QueryRelationToOne<ContextItem, AudioContextItem>(
          _entities[1].properties[4]);
}

/// [AudioRecording] entity fields to define ObjectBox queries.
class AudioRecording_ {
  /// see [AudioRecording.id]
  static final id =
      obx.QueryIntegerProperty<AudioRecording>(_entities[2].properties[0]);

  /// see [AudioRecording.timestamp]
  static final timestamp =
      obx.QueryDateProperty<AudioRecording>(_entities[2].properties[1]);

  /// see [AudioRecording.filePath]
  static final filePath =
      obx.QueryStringProperty<AudioRecording>(_entities[2].properties[2]);

  /// see [AudioRecording.duration]
  static final duration =
      obx.QueryIntegerProperty<AudioRecording>(_entities[2].properties[3]);
}
